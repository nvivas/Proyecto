/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanaColor;

import Gestor.Conexion;
import clases.ColorTablero;
import com.placeholder.PlaceHolder;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sentencias.Tareas_color;

/**
 *
 * @author Nacho
 */
public class InsertarColor extends javax.swing.JFrame {

    private final Tareas_color tareas_color = new Tareas_color();
    private ColorTablero tablero;
    private PlaceHolder holder;

    public InsertarColor() {
        tablero = new ColorTablero();
        initComponents();
        holder = new PlaceHolder(txtColor, "Introduce un color");
        this.setLocationRelativeTo(null);
        cmbProveedor.setSelectedItem(tablero.getNombre_proveedor());
        cargar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtLargo = new javax.swing.JTextField();
        txtAncho = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtGrueso = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        cmbProveedor = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("Largo: ");

        jLabel7.setText("Ancho");

        txtLargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLargoKeyTyped(evt);
            }
        });

        txtAncho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnchoKeyTyped(evt);
            }
        });

        jLabel8.setText("Grueso");

        txtGrueso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGruesoKeyTyped(evt);
            }
        });

        jLabel3.setText("Descripci√≥n");

        jLabel4.setText("Proveedor");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INSERTAR COLORES");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0, 50, 5));

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAceptar);

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel1.add(btnVolver);

        cmbProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(13, 13, 13)
                        .addComponent(txtColor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtLargo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtAncho, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtGrueso, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 83, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cmbProveedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(32, 32, 32))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(cmbProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtLargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAncho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtGrueso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtLargoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLargoKeyTyped
        largo(evt);
    }//GEN-LAST:event_txtLargoKeyTyped

    private void txtAnchoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnchoKeyTyped
        ancho(evt);
    }//GEN-LAST:event_txtAnchoKeyTyped

    private void txtGruesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGruesoKeyTyped
        grueso(evt);
    }//GEN-LAST:event_txtGruesoKeyTyped

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        try {
            PpalColor pro = new PpalColor();
            pro.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(PpalColor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try {
            guardar();
        } catch (Exception ex) {
            Logger.getLogger(InsertarColor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbProveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAncho;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtGrueso;
    private javax.swing.JTextField txtLargo;
    // End of variables declaration//GEN-END:variables

    public void letras(KeyEvent evt) throws HeadlessException {
        char c = evt.getKeyChar();
        if (!Character.isLetter(c) && !(c == KeyEvent.VK_SPACE) && !(c == KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo se puede escribir letras");
        }
    }

    private void largo(KeyEvent evt) throws HeadlessException {
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Solo puede escribir n√∫meros (largo)", "ERROR", 0);
            txtLargo.setText("");
            txtLargo.requestFocus();
        }
    }

    private void ancho(KeyEvent evt) throws HeadlessException {
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Solo puede escribir n√∫meros(ancho)", "ERROR", 0);
            txtAncho.setText("");
            txtAncho.requestFocus();
        }
    }

    private void grueso(KeyEvent evt) throws HeadlessException {
        char c = evt.getKeyChar();
        if (Character.isAlphabetic(c)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Solo puede escribir n√∫meros(grueso)", "ERROR", 0);
            txtGrueso.setText("");
            txtGrueso.requestFocus();
        }
    }

    private void guardar() throws Exception {
        PreparedStatement consulta = null;
        ResultSet rs = null;

        int[] num = new int[1];
        String nombreColor, proveedor;
        int id, largo, ancho, grueso;

        nombreColor = txtColor.getText();

        // id = Integer.parseInt(txtId.getText());
        largo = Integer.parseInt(txtLargo.getText());
        ancho = Integer.parseInt(txtAncho.getText());
        grueso = Integer.parseInt(txtGrueso.getText());

        proveedor = cmbProveedor.getSelectedItem().toString();

        System.out.println(proveedor);
        String sqlProveedor = "Select id_proveedor from proveedor where nombre_pro = '" + proveedor + "'";
        try {
            consulta = Conexion.cnx.prepareStatement(sqlProveedor);
            rs = consulta.executeQuery();

        } catch (SQLException e) {
            e.printStackTrace();
        }

       
        if(rs.next()){
            num[0] = rs.getInt("id_proveedor");
        }
      
        tablero = new ColorTablero(nombreColor, largo, ancho, grueso, num[0]);

        tareas_color.darAlta(tablero);
        InsertarColor.this.dispose();
        PpalColor ppal = new PpalColor();
        ppal.setVisible(true);
        ppal.setLocationRelativeTo(null);

    }

    
public void cargar() {
        // Eliminar todos los items del combo
        cmbProveedor.removeAllItems();
        // A√±adir Un item vac√≠o
        cmbProveedor.addItem("");

        // listas para guardar cada nombre        
        ArrayList<String> lista = new ArrayList<>();

        lista = Tareas_color.llenar_combo_pro();
        for (int i = 0; i < lista.size(); i++) {
            cmbProveedor.addItem(lista.get(i));
        }

    }

}
